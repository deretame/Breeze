// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

BikaComicHistory _$BikaComicHistoryFromJson(Map<String, dynamic> json) =>
    BikaComicHistory(
      id: (json['id'] as num?)?.toInt() ?? 0,
      comicId: json['comicId'] as String,
      creatorId: json['creatorId'] as String,
      creatorGender: json['creatorGender'] as String,
      creatorName: json['creatorName'] as String,
      creatorVerified: json['creatorVerified'] as bool,
      creatorExp: (json['creatorExp'] as num).toInt(),
      creatorLevel: (json['creatorLevel'] as num).toInt(),
      creatorCharacters:
          (json['creatorCharacters'] as List<dynamic>)
              .map((e) => e as String)
              .toList(),
      creatorCharactersString: json['creatorCharactersString'] as String,
      creatorRole: json['creatorRole'] as String,
      creatorTitle: json['creatorTitle'] as String,
      creatorAvatarOriginalName: json['creatorAvatarOriginalName'] as String,
      creatorAvatarPath: json['creatorAvatarPath'] as String,
      creatorAvatarFileServer: json['creatorAvatarFileServer'] as String,
      creatorSlogan: json['creatorSlogan'] as String,
      title: json['title'] as String,
      description: json['description'] as String,
      thumbOriginalName: json['thumbOriginalName'] as String,
      thumbPath: json['thumbPath'] as String,
      thumbFileServer: json['thumbFileServer'] as String,
      author: json['author'] as String,
      chineseTeam: json['chineseTeam'] as String,
      categories:
          (json['categories'] as List<dynamic>)
              .map((e) => e as String)
              .toList(),
      categoriesString: json['categoriesString'] as String,
      tags: (json['tags'] as List<dynamic>).map((e) => e as String).toList(),
      tagsString: json['tagsString'] as String,
      pagesCount: (json['pagesCount'] as num).toInt(),
      epsCount: (json['epsCount'] as num).toInt(),
      finished: json['finished'] as bool,
      updatedAt: DateTime.parse(json['updatedAt'] as String),
      createdAt: DateTime.parse(json['createdAt'] as String),
      allowDownload: json['allowDownload'] as bool,
      allowComment: json['allowComment'] as bool,
      totalLikes: (json['totalLikes'] as num).toInt(),
      totalViews: (json['totalViews'] as num).toInt(),
      totalComments: (json['totalComments'] as num).toInt(),
      viewsCount: (json['viewsCount'] as num).toInt(),
      likesCount: (json['likesCount'] as num).toInt(),
      commentsCount: (json['commentsCount'] as num).toInt(),
      isFavourite: json['isFavourite'] as bool,
      isLiked: json['isLiked'] as bool,
      history: DateTime.parse(json['history'] as String),
      order: (json['order'] as num).toInt(),
      epTitle: json['epTitle'] as String,
      epPageCount: (json['epPageCount'] as num).toInt(),
      epId: json['epId'] as String,
      deleted: json['deleted'] as bool,
      deletedAt: DateTime.parse(json['deletedAt'] as String),
    );

Map<String, dynamic> _$BikaComicHistoryToJson(BikaComicHistory instance) =>
    <String, dynamic>{
      'id': instance.id,
      'comicId': instance.comicId,
      'creatorId': instance.creatorId,
      'creatorGender': instance.creatorGender,
      'creatorName': instance.creatorName,
      'creatorVerified': instance.creatorVerified,
      'creatorExp': instance.creatorExp,
      'creatorLevel': instance.creatorLevel,
      'creatorCharacters': instance.creatorCharacters,
      'creatorCharactersString': instance.creatorCharactersString,
      'creatorRole': instance.creatorRole,
      'creatorTitle': instance.creatorTitle,
      'creatorAvatarOriginalName': instance.creatorAvatarOriginalName,
      'creatorAvatarPath': instance.creatorAvatarPath,
      'creatorAvatarFileServer': instance.creatorAvatarFileServer,
      'creatorSlogan': instance.creatorSlogan,
      'title': instance.title,
      'description': instance.description,
      'thumbOriginalName': instance.thumbOriginalName,
      'thumbPath': instance.thumbPath,
      'thumbFileServer': instance.thumbFileServer,
      'author': instance.author,
      'chineseTeam': instance.chineseTeam,
      'categories': instance.categories,
      'categoriesString': instance.categoriesString,
      'tags': instance.tags,
      'tagsString': instance.tagsString,
      'pagesCount': instance.pagesCount,
      'epsCount': instance.epsCount,
      'finished': instance.finished,
      'updatedAt': instance.updatedAt.toIso8601String(),
      'createdAt': instance.createdAt.toIso8601String(),
      'allowDownload': instance.allowDownload,
      'allowComment': instance.allowComment,
      'totalLikes': instance.totalLikes,
      'totalViews': instance.totalViews,
      'totalComments': instance.totalComments,
      'viewsCount': instance.viewsCount,
      'likesCount': instance.likesCount,
      'commentsCount': instance.commentsCount,
      'isFavourite': instance.isFavourite,
      'isLiked': instance.isLiked,
      'history': instance.history.toIso8601String(),
      'order': instance.order,
      'epTitle': instance.epTitle,
      'epPageCount': instance.epPageCount,
      'epId': instance.epId,
      'deleted': instance.deleted,
      'deletedAt': instance.deletedAt.toIso8601String(),
    };

BikaComicDownload _$BikaComicDownloadFromJson(Map<String, dynamic> json) =>
    BikaComicDownload(
      id: (json['id'] as num?)?.toInt() ?? 0,
      comicId: json['comicId'] as String,
      creatorId: json['creatorId'] as String,
      creatorGender: json['creatorGender'] as String,
      creatorName: json['creatorName'] as String,
      creatorVerified: json['creatorVerified'] as bool,
      creatorExp: (json['creatorExp'] as num).toInt(),
      creatorLevel: (json['creatorLevel'] as num).toInt(),
      creatorCharacters:
          (json['creatorCharacters'] as List<dynamic>)
              .map((e) => e as String)
              .toList(),
      creatorCharactersString: json['creatorCharactersString'] as String,
      creatorRole: json['creatorRole'] as String,
      creatorTitle: json['creatorTitle'] as String,
      creatorAvatarOriginalName: json['creatorAvatarOriginalName'] as String,
      creatorAvatarPath: json['creatorAvatarPath'] as String,
      creatorAvatarFileServer: json['creatorAvatarFileServer'] as String,
      creatorSlogan: json['creatorSlogan'] as String,
      title: json['title'] as String,
      description: json['description'] as String,
      thumbOriginalName: json['thumbOriginalName'] as String,
      thumbPath: json['thumbPath'] as String,
      thumbFileServer: json['thumbFileServer'] as String,
      author: json['author'] as String,
      chineseTeam: json['chineseTeam'] as String,
      categories:
          (json['categories'] as List<dynamic>)
              .map((e) => e as String)
              .toList(),
      categoriesString: json['categoriesString'] as String,
      tags: (json['tags'] as List<dynamic>).map((e) => e as String).toList(),
      tagsString: json['tagsString'] as String,
      pagesCount: (json['pagesCount'] as num).toInt(),
      epsCount: (json['epsCount'] as num).toInt(),
      finished: json['finished'] as bool,
      updatedAt: DateTime.parse(json['updatedAt'] as String),
      createdAt: DateTime.parse(json['createdAt'] as String),
      allowDownload: json['allowDownload'] as bool,
      allowComment: json['allowComment'] as bool,
      totalLikes: (json['totalLikes'] as num).toInt(),
      totalViews: (json['totalViews'] as num).toInt(),
      totalComments: (json['totalComments'] as num).toInt(),
      viewsCount: (json['viewsCount'] as num).toInt(),
      likesCount: (json['likesCount'] as num).toInt(),
      commentsCount: (json['commentsCount'] as num).toInt(),
      isFavourite: json['isFavourite'] as bool,
      isLiked: json['isLiked'] as bool,
      downloadTime: DateTime.parse(json['downloadTime'] as String),
      epsTitle:
          (json['epsTitle'] as List<dynamic>).map((e) => e as String).toList(),
      comicInfoAll: json['comicInfoAll'] as String,
    );

Map<String, dynamic> _$BikaComicDownloadToJson(BikaComicDownload instance) =>
    <String, dynamic>{
      'id': instance.id,
      'comicId': instance.comicId,
      'creatorId': instance.creatorId,
      'creatorGender': instance.creatorGender,
      'creatorName': instance.creatorName,
      'creatorVerified': instance.creatorVerified,
      'creatorExp': instance.creatorExp,
      'creatorLevel': instance.creatorLevel,
      'creatorCharacters': instance.creatorCharacters,
      'creatorCharactersString': instance.creatorCharactersString,
      'creatorRole': instance.creatorRole,
      'creatorTitle': instance.creatorTitle,
      'creatorAvatarOriginalName': instance.creatorAvatarOriginalName,
      'creatorAvatarPath': instance.creatorAvatarPath,
      'creatorAvatarFileServer': instance.creatorAvatarFileServer,
      'creatorSlogan': instance.creatorSlogan,
      'title': instance.title,
      'description': instance.description,
      'thumbOriginalName': instance.thumbOriginalName,
      'thumbPath': instance.thumbPath,
      'thumbFileServer': instance.thumbFileServer,
      'author': instance.author,
      'chineseTeam': instance.chineseTeam,
      'categories': instance.categories,
      'categoriesString': instance.categoriesString,
      'tags': instance.tags,
      'tagsString': instance.tagsString,
      'pagesCount': instance.pagesCount,
      'epsCount': instance.epsCount,
      'finished': instance.finished,
      'updatedAt': instance.updatedAt.toIso8601String(),
      'createdAt': instance.createdAt.toIso8601String(),
      'allowDownload': instance.allowDownload,
      'allowComment': instance.allowComment,
      'totalLikes': instance.totalLikes,
      'totalViews': instance.totalViews,
      'totalComments': instance.totalComments,
      'viewsCount': instance.viewsCount,
      'likesCount': instance.likesCount,
      'commentsCount': instance.commentsCount,
      'isFavourite': instance.isFavourite,
      'isLiked': instance.isLiked,
      'downloadTime': instance.downloadTime.toIso8601String(),
      'epsTitle': instance.epsTitle,
      'comicInfoAll': instance.comicInfoAll,
    };
